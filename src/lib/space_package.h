////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@file
///@brief Declarations for LANGUAGE space_package and their functions.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SPACEMAN_PACKAGE_H__
#define SPACEMAN_PACKAGE_H__

#include <stdio.h>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@breif language defs
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
enum LANGUAGE
{
  C,
  CXX
} LANGUAGE;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@brief Package used by multiple functions.
///@paragraph description Struct that is used for storing details and files about a package.
///Is used by space_package_new and space_package_init.
/// @see space_package_new @see space_package_init
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef struct space_package
{
    FILE* spac_file;
    char** dirs;
    FILE** sources;
	char* source_names;
    char** name;
    enum LANGUAGE language;
} space_package;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@brief converts a LANGUAGE to a const char*.
///@param language The LANGUAGE to convert to a string.
///@returns The language as a string.
///@see LANGUAGE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
const char* language_to_string(enum LANGUAGE language);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@brief Creates a new space_package in the filesystem.
///@param pack_name The packages name.
///@param language The language of the package, c or c++
///@returns a spaceman package pointer, allocated in the heap.
///@see space_package @see space_package_init used if the directory already exists @see LANGUAGE language defs
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
space_package* space_package_new(char* pack_name, enum LANGUAGE language);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///@brief Initialises a package in an existing directory.
///@param pack_name The packages name.
///@param language The language of the package, c or c++
///@returns a space_package pointer, allocated in the heap.
///@see space_package @see space_package_new used if the does not directory already exists @see LANGUAGE language defs
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
space_package* space_package_init(char* pack_name, enum LANGUAGE language);


#endif
